---
title: "analyzing-doctypes"
---

```{r echo=FALSE, message=FALSE, error=FALSE, warning=FALSE}
library(tidyverse)
library(lubridate)
library(DBI)
library(RPostgres)
library(MetBrewer)

source("../config/config-secret.R")
source("../config/config-graphic.R")

con <- dbConnect(RPostgres::Postgres(), 
                 dbname = dsn_database,
                 host = dsn_hostname, 
                 port = dsn_port,
                 user = dsn_uid, 
                 password = dsn_pwd
)


df_doctype_legend <- dbGetQuery(conn = con, paste0("SELECT DISTINCT(name) FROM tags WHERE tag LIKE 'doctype'")) %>% 
  mutate(doctype_cleaned = str_extract(name, "-\\/\\/(W3C|IETF)?\\/\\/DTD\\sX?HTML\\s?(\\d{1}\\.\\d{1,})?\\s?(Transitional|Strict|Frameset|Final)?\\/\\/\\w{2}"),
         doctype_cleaned = ifelse(str_detect(name, "^html$|^HTML$"), str_extract(name, "^html$|^HTML$"), doctype_cleaned),
         doctype_cleaned = ifelse(str_detect(name,"html SYSTEM"), name, doctype_cleaned),
         doctype_cleaned = str_remove(doctype_cleaned, "-\\/\\/(W3C|IETF)?\\/\\/DTD\\s"),
         doctype_cluster = str_extract(doctype_cleaned, "X?(HTML|html)\\s?(\\d{1}\\.\\d{1,})?"),
         doctype_cluster = ifelse(str_detect(doctype_cluster,"html\\s{0,}"), trimws(str_to_upper(doctype_cluster)), doctype_cluster)) %>% 
  select(doctype_cleaned, doctype_cluster) %>% 
  distinct() %>% 
  group_by(doctype_cluster) %>% 
  mutate(group = row_number())


# df <- dbGetQuery(conn = con, paste0("SELECT t.site, t.tag, t.name, s.crawl_date, s.sha1, s.sphere FROM sites s INNER JOIN tags t ON t.site = s.sha1 WHERE s.sphere LIKE'German' AND t.tag LIKE 'doctype'")) 

df_sites_per_day <- dbGetQuery(conn = con, paste0("SELECT s.crawl_date, COUNT(s.sha1) as sites_per_day FROM sites s  WHERE s.sphere LIKE '", "German", "' GROUP BY s.crawl_date")) %>% 
  mutate(crawl_date = ymd(crawl_date),
    month = month(crawl_date),
    year = year(crawl_date)) %>% 
  group_by(month, year) %>% 
  summarise(sites_per_month = sum(sites_per_day)) %>% 
  mutate(date = paste0(year, "- ",month, "-01") %>% ymd(.))


df <- dbGetQuery(conn = con, paste0("SELECT t.site, t.tag, t.name, s.crawl_date, s.sha1, s.sphere FROM sites s INNER JOIN tags t ON t.site = s.sha1 WHERE s.sphere LIKE'", "German", "' AND t.tag LIKE '", "doctype", "'")) %>% 
  mutate(doctype_cleaned = str_extract(name, "-\\/\\/(W3C|IETF)?\\/\\/DTD\\sX?HTML\\s?(\\d{1}\\.\\d{1,})?\\s?(Transitional|Strict|Frameset|Final)?\\/\\/\\w{2}"),
         doctype_cleaned = ifelse(str_detect(name, "^html$|^HTML$"), str_extract(name, "^html$|^HTML$"), doctype_cleaned),
         doctype_cleaned = ifelse(str_detect(name,"html SYSTEM"), name, doctype_cleaned),
         doctype_cleaned = str_remove(doctype_cleaned, "-\\/\\/(W3C|IETF)?\\/\\/DTD\\s"),
         doctype_cluster = str_extract(doctype_cleaned, "X?(HTML|html)\\s?(\\d{1}\\.\\d{1,})?"),
         doctype_cluster = ifelse(str_detect(doctype_cluster,"html\\s{0,}"), trimws(str_to_upper(doctype_cluster)), doctype_cluster),
         crawl_date = ymd(crawl_date)) %>% 
  mutate(month = month(crawl_date),
         year = year(crawl_date)) %>% 
  group_by(month, year, doctype_cleaned, doctype_cluster) %>% 
  summarise(sites_per_month_counted = n()) %>% 
  mutate(date = paste0(year, "- ",month, "-01") %>% ymd(.)) %>% 
  ungroup() %>% 
  left_join(., df_sites_per_day) %>% 
  mutate(normalized = sites_per_month_counted/sites_per_month) 


get_doctype_info <- function(sphere, tag){
  df_sites_per_day <- dbGetQuery(conn = con, paste0("SELECT s.crawl_date, COUNT(s.sha1) as sites_per_day FROM sites s  WHERE s.sphere LIKE '", sphere, "' GROUP BY s.crawl_date")) %>% 
    mutate(crawl_date = ymd(crawl_date),
           month = month(crawl_date),
           year = year(crawl_date)) %>% 
    group_by(month, year) %>% 
    summarise(sites_per_month = sum(sites_per_day)) %>% 
    mutate(date = paste0(year, "- ",month, "-01") %>% ymd(.)) %>% 
    ungroup()
  
  df <- dbGetQuery(conn = con, paste0("SELECT t.site, t.tag, t.name, s.crawl_date, s.sha1, s.sphere FROM sites s INNER JOIN tags t ON t.site = s.sha1 WHERE s.sphere LIKE'", sphere, "' AND t.tag LIKE '", tag, "'")) %>% 
    mutate(doctype_cleaned = str_extract(name, "-\\/\\/(W3C|IETF)?\\/\\/DTD\\sX?HTML\\s?(\\d{1}\\.\\d{1,})?\\s?(Transitional|Strict|Frameset|Final)?\\/\\/\\w{2}"),
           doctype_cleaned = ifelse(str_detect(name, "^html$|^HTML$"), str_extract(name, "^html$|^HTML$"), doctype_cleaned),
           doctype_cleaned = ifelse(str_detect(name,"html SYSTEM"), name, doctype_cleaned),
           doctype_cleaned = str_remove(doctype_cleaned, "-\\/\\/(W3C|IETF)?\\/\\/DTD\\s"),
           doctype_cluster = str_extract(doctype_cleaned, "X?(HTML|html)\\s?(\\d{1}\\.\\d{1,})?"),
           doctype_cluster = ifelse(str_detect(doctype_cluster,"html\\s{0,}"), trimws(str_to_upper(doctype_cluster)), doctype_cluster),
           crawl_date = ymd(crawl_date), 
           month = month(crawl_date),
           year = year(crawl_date)) %>% 
    group_by(month, year, doctype_cluster) %>% 
    summarise(sites_per_month_counted = n()) %>% 
    mutate(date = paste0(year, "- ",month, "-01") %>% ymd(.)) %>% 
    ungroup() %>% 
    left_join(., df_sites_per_day) %>% 
    mutate(normalized = sites_per_month_counted/sites_per_month) 
}

```

## To Do: Why looking at doctypes?
they do not tell a thing about commenting systems, but speaking of the standards in place when the website was published (crawled?).

```{r echo=FALSE, message=FALSE, error=FALSE, warning=FALSE}



doc_colors <- met.brewer("Renoir", n = 6, type = "discrete") %>% enframe()

# test_colors <- df_doctype_legend %>% 
#   select(doctype_cluster) %>% 
#   distinct() %>% #View()
#   filter(!is.na(doctype_cluster)) %>% 
#   arrange(doctype_cluster) %>% 
#   bind_cols(.,doc_colors) %>% 
#   select(-name) #%>% deframe()
# 
# write_csv(test_colors, "../data/helper/doctype-colors.csv")
doc_colors_legend <- read_csv("../data/helper/doctype-colors.csv") %>% deframe()


```

## Standards of the German websphere


```{r echo=FALSE, message=FALSE, error=FALSE, warning=FALSE}
df_doctype_de <- get_doctype_info("German", "doctype")

df_doctype_de %>% 
  ggplot(., aes(x = date, y = normalized, fill = doctype_cluster)) +
  geom_col(width = 28) +
  scale_fill_manual(values = doc_colors_legend, na.value = "#d2d2d2") +
  ylim(0,1.05) + 
  theme_b03_base + theme_b03_heatmap + theme_b03_facets + theme_b03_legend_discrete +
  labs(title = "Doctype Definition in the German Websphere")
```


## Standards of the Dutch websphere 

```{r echo=FALSE, message=FALSE, error=FALSE, warning=FALSE}
df_doctype_nl <- get_doctype_info("Dutch", "doctype")

df_doctype_nl %>% 
  group_by(date) %>% 
  summarise(sum(normalized)) %>% View()


df_doctype_nl %>% 
  ggplot(., aes(x = date, y = normalized, fill = doctype_cluster)) +
  geom_col(width = 28) +
  scale_fill_manual(values = doc_colors_legend, na.value = "#d2d2d2") +
  ylim(0,1.05) + 
  theme_b03_base + theme_b03_heatmap + theme_b03_facets + theme_b03_legend_discrete +
  labs(title = "Doctype Definition in the Dutch Websphere")
```

## ... and of the International websphere

```{r echo=FALSE, message=FALSE, error=FALSE, warning=FALSE}
df_doctype_world <- get_doctype_info("World", "doctype")

  

df_doctype_world  %>% 
  # left_join(., doc_colors_legend_2) %>% #View()
  ggplot(., aes(x = date, y = normalized, fill = doctype_cluster)) +
  geom_col(width = 28) +
  scale_fill_manual(values = doc_colors_legend, na.value = "#d2d2d2") +
  theme_b03_base + theme_b03_heatmap + theme_b03_facets + theme_b03_legend_discrete +
  labs(title = "Doctype Definition in the\nInternational Websphere")
  # guides(fill = guide_coloursteps(title.position = "top", barwidth = unit(20, "lines"), barheight = unit(.5, "lines")))

```

